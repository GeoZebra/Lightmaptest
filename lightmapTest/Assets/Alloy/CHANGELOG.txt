Version 3.2.7
=====================
Shaders:
- Added a deferred reflections override shader.
- Added a shadow cull mode setting on the "Transmission SingleSided" shaders.

Substance Painter:
- Changed the preview shader to account for SP 1.5 changes. 
- Fixed the alpha blending/test shader variants.

Version 3.2.6
=====================
Shaders:
- Fixed and simplified the UBER integration by adding a dedicated deferred shader.

Tools:
- Fixed the Map Packer pack definition corruption problem.

Version 3.2.5
=====================
Shaders:
- Added "Alloy/Particles/VertexLit Blended" shader with support for vertex lighting and light probes.
- Added UBER integration to our deferred override shader.
- Added Occlusion Strength and Normal Strength parameters to all relevant shaders.
- Added Beta Alloy brdf and area light override headers for Unity's surface shader system.
  * Currently works for surface shaders using Standard, StandardSpecular, Phong, and Lambert lighting models.
- Changed default HDR Clamp from 32 to 100.
  * To restore legacy, modify setting in config header.
- Changed the "CarPaint" shaders to have the flake map RGB act as a tint, and the alpha act as the mask.
  * Set config flag to restore legacy behavior.
- Changed the Unlit shaders' Main Textures properties' Tint parameter to use an HDR Color picker.
- Changed the Unlit shaders to affect the Gbuffer in deferred mode so that image effects will detect them.
- Changed light probe sampling to be fully per-pixel by default.
  * Restore legacy behavior with config flag.
- Changed our internal Luminance code to a more modern formula, which may affect look of specular tints.
- Changed the Weathered Blend shader to apply parallax to the base masks and normals.
- Fixed an issue with the Skin shader where it wasn't correctly accounting for shadows and attenuation in it's LUT lookup.
- Fixed an issue in the Static Directional Specular mode where we weren't applying the direct contribution.
- Fixed the Directional Specular lightmap mode to apply AO to its diffuse contribution to look more consistent with the other lightmap modes.
- Fixed the POM distortion that occurred on large triangles at grazing angles.
- Fixed the random popping issues in the POM effect that occurred when the camera moved away from the object.
- Fixed the default value for the Transmission shaders' Bump Distortion to make the effect more apparent.
- Fixed the divide by zero compiler warnings for some of the shaders.
- Fixed a GLSL compilation issue.

Tools:
- Changed the channel packer tool to make it data-driven and support user-defined packer modes.
- Fixed the issue where freshly imported packed maps would be broken and need to be manually reimported. 

Version 3.2.1
=====================
Scripts:
- Fixed incorrect gamma correction in Map packer to account for changes in Unity 5.1.

Version 3.2.0
=====================
Shaders:
- Added the "TriPlanar/Full" and "TriPlanar/Lite" shaders.
- Added TriPlanar variants of "Terrain/4Splat" and "Vertex Blend/4Splat".
- Adjusted the normal projection for "Oriented/Blend" and "Oriented/Core".
- Merged "Directional/Blend World" and "Directional/Blend Object" into "Directional Blend".
- Migrated all the emission effects to using the new Unity HDR color picker.
- Modified the "Transmission DoubleSided" shader to add the parameters Shadow Weight & Invert Back Normal.
- Fixed the backface lighting for the "Transmission DoubleSided" shaders.
- Removed the legacy features flags.
- Renamed "Hair/Translucent" -> "Hair/HighQuality" and "Hair/Base" -> "Hair/LowQuality" for clarity.
- Renamed "Vertex Blend 4Splat" -> "Vertex Blend/4Splat" for grouping flexibility.

Scripts:
- Removed the legacy Intensity Gain color control from our inspector definition system.
- Removed the AlloyUtils.IntensityGain() utility function.

Version 3.1.2
=====================
Shaders:
- Changed all instances of "_AlphaTestRef" property to "_Cutoff" to ensure compatibility with Unity 3.1's depth-normal pass replacement shader.
- Fixed Oriented Blend and Core shaders to swap X & Z normal mapping and to properly convert Y on the underside of the object.
- Fixed distant terrain shader to use Unity's renamed metallic texture property and roughness.

Version 3.1.1
=====================
Shaders:
- Added a new "Combined" tessellation mode that combines Phong and Displacement.
- Fixed the GI code that caused weird noisy glitching artifacts on some MacOSX platforms.
- Fixed the Parallax code that was causing it to fail to compile on the PS4.
- Fixed the Detail feature code that caused it to fail to compile on some MacOSX platforms.
- Fixed the Substance Designer preview shaders' code that caused them to fail to compile on AMD GPUs.

Version 3.1
=====================
Shaders:
- Added "Directional Blend" shaders with support for blending around an arbitrary direction on the surface.
- Added "Vertex Blend 4Splat" shaders with support for blending 4 splats using vertex colors.
- Added a secondary vertex color tint slider to the "Oriented*", "Transition", & "Weighted Blend" shaders.
- Added a Pupil Dilation control to the "Eye/Eyeball".
- Added directional control to the "Oriented Blend" shaders.
- Changed all shaders to now have the Global Illumination control at the top so all types of emission can affect GI.
  * You will need to manually set all your static objects to "None", as this control always defaults to "Realtime".
- Changed the "CarPaint" shader.
  * Added a primary tint color that is applied in the masked areas.
  * "Main Textures" tint color now affects both primary and secondary paint colors.
  * Toggle legacy behavior in the config header.
- Changed the "Eye/Eyeball" shader.
  * Split up the "Eye Properties" into two smaller sections.
  * Added a Schlera tint color.
  * "Main Textures" tint color now affects both Schlera and Iris colors.
  * Toggle legacy behavior in the config header.
- Changed our Parallax code to reduce the overall cost per active feature and simplify the API.
- Changed "Weighted Blend" & "Oriented Blend" to allow emission to be blended over.
- Changed "Weighted Blend" to remove Secondary Rim, as there should only be one rim term for the combined material.
- Changed "Transition" so that the Dissolve feature now accounts for each layer's parallax texture offsets.
- Fixed the "Particle*" shaders so that input vertex colors now receive gamma-correction.
- Fixed the "Tessellation/Oriented*" shaders which erroniously were set to target SM3.0, and had parallax properties.
- Fixed it so that Fade rendering mode no longer increase opacity when the surface metalness increases.
- Fixed the code we use to transform normals for our Oriented shaders.
- Fixed a compiler bug on the "Eye/Eyeball" shader when using the Dissolve feature in SM3 mode.
- Fixed a Null Ref error when using substances and switching shaders.
- Fixed the rendering modes dropdown to now work with undo.
- Fixed a potential compilation bug in the Glass shader when used on consoles.

Tools:
- Fixed the Material Map Channel Packer so that its controls now support undo.

Shader API:
- Rebuilt our lighting code to give each lighting type its own shareable module, removing the code from the shaders.
- Simplified our texture coordinate macro system so that each texture doesn't need to know about parallax.
- Added a masking system to allow features to be externally masked for different blending behavior.

Known Issues:
- The visualize feature currently doesn't work properly for textures that use world-space UVs.

Version 3.02
=====================
Shaders:
- Changed to an optimized BRDF visibility function.
  * Toggle legacy behavior in the config header.
- Changed our higher quality Environment BRDF to use a formulation that maps correctly to linear roughness.
- Changed the Environment BRDF to use our new formulation by default.
  * Required some small changes to the lighting API.
  * Toggle legacy behavior in the config header.
- Fixed a bug in the Weighted Blend shaders where the vertex tint control was not doing anything.

Features:
- Changed the TeamColor module to use our new formulation by default.
  * Toggle legacy behavior in the config header.

Tools:
- Fixed a possible bug in the Material Map Channel Packer where it would error if any of the input textures didn't have mipmaps enabled.

Integration:
- Substance Designer
  * Changed visibility function to match Unity shaders.
  * Removed the Specular AA feature as it was never really working properly due to the lack of mipmap generation.

Version 3.01
=====================
Shaders:  
- Added support for tinting the base color with vertex colors.
- Added a Mode dropdown to the Team Color feature to support explicitly turning off the alpha mask.
- Modified the Weighted Blend shader to control the influence of the vertex alpha on the weight.
- Modified the vertex lighting fallback to use Alloy's attenuation function.
- Modified the config header options.
- Fixed a compilation issue with the terrain shaders.
- Fixed a bug in the AlloyVertex() callback where it wouldn't properly handle vertex position modification.

Tools:
- Fixed a potential bug on the AreaLight component where it wouldn't let you change the light intensity or color if the light was disabled. 

Features:
- Modified the Decal feature:
  * Added a Weight property to allow smoothly turning decals on and off from scripts without modifying the tint color.
  * Added a property for controlling how much the vertex color alpha weights the Decals.

Integration:
- Substance Painter
  * Updated the preview shader to support SP1.3.
  * Added Alpha translucency and cutout variants of the preview shader.

Version 3.0 beta8
=====================
Shaders:  
- Added a cutoff control the Hair Translucent shaders to allow control over the opaque regions for better sorting.
- Modified all the Tessellation shaders to use their regular variants as fallbacks. 
- Fixed a problem with the Detail feature where it wouldn't compile on MacOSX. 

Tools:
- Added a new tool for migrating existing punctual lights to Alloy area lights.
- Fixed our Area Light code to now convert existing light data to our representation when the Area Light component is added.
- Fixed our Terrain Packed Maps to correctly grab color info, rather than just a single channel.
  
Version 3.0 beta7
=====================
Shaders: 
- Added a new config option for higher quality IBL fresnel.
  * Currently disabled by default as we decide if we want to make it the new default. 
- Changed the Tessellation shaders so that the Displacement property goes up to a max of 30.
- Moved the Max intensity constant to the Config header to allow easier customization. 
- Fixed a bug in our Amplify Texture support code where we were using the wrong function when sampling normals.

Version 3.0 beta6
=====================
Shaders: 
- Changed the Particle shaders:
  * Added a rim fade feature to support light shaft effects.
  * Added a near fade feature to support fading particles that get close to the camera.
  * Centralized their code in a shared header for easier maintenance. 
- Switched to using Unity RC3's new [Gamma] attribute for some input properties to save calculations inside the shaders.

Version 3.0 beta5
=====================
Shaders: 
- Changed the config header to add an option for enabling a minimum tessellation edge length property. 
  This can be globally set by a script to control the tessellation quality of all models.
- Changed surface shader API.
  * Changed most of the shader pass code to centralize their shared code.
- Changed the Oriented Blend shader:
  * If the Oriented material has an alpha channel, it alpha blends on top of the base material.
  * If the base material has an alpha, it will alpha through or cutout the oriented material.  

Version 3.0 beta4
=====================
Shaders: 
- Changed surface shader API.
  * Added support for modifying vertices.
  * Added support for final color modification.
  * Added an explicit folder with default headers for various surface shader callbacks. 
- Fixed the Distort pass to now support Fog.

Tools:
- Material Inspector
  * Fixed an issue with the visualize function where the underlying mesh would poke through on edges.

Version 3.0 beta3
=====================
Shaders: 
- Changed the Terrain shaders.
  * Restored the additional per-splat parameters and base layer.
  * Restored deferred support. 
  * Removed 5-n splat support. 
- Fixed several Unity config problems
  * Shaders were Orthonormalizing when they shouldn't have been.
  * Shaders were using Box projection and probe blending when they shouldn't have been. 

Tools:
- Material Inspector
  * Added a new control for Unity's LightmapEmissionProperty.

Version 3.0 beta2
=====================
Shaders: 
- Added "Oriented/Core" shaders
  * World-textured material.
- Changed the Oriented Blend Shader
  * Changed the name to "Oriented/Blend".
  * Now uses its own property names, so allow easy copying between it and "Oriented/Core".
  * Now blends based on the per-pixel world normal, rather than the geometry world normals.
- Changed Skin shaders 
  * Added an explicit skin mask and removed implicit control through the translucency map.
  * Changed Transmission to now convert the Translucency map input to linear space.
  * Removed Metallic control and mask.
- Changed Weighted Blend/Transition shaders.
  * Secondary maps now support Scroll and UV Set selection.
- Changed all shaders.
  * Base and Detail maps now support Scroll and UV Set selection.
- Fixed the Eyeball shader to default Iris Depth to 0.08 rather than 1.
- Fixed the Terrain
  * Had to remove a bunch of features since Unity took away the ability to use them.
  * It now can use the per-splat and distant metallic feature. 

Tools:
- Material Inspector
  * Added support for rendering a Vector2-4 control for Vector properties. 
  * Fixed a bug where it would render a color control for Vector properties.

Version 3.0 beta1
=====================
Lighting:
- Added support for both Point and Spot Spherical Area lights!
- Modified Point and Spot lights to use Inverse Square physical attenuation.
- Modified our lighting model.
  * Diffuse now exhibits interreflection for rough materials.
  * Specular lighting now uses the GGX BRDF.
- IBL
  * Added support for Unity 5's new reflection probes, dynamic GI, directional lightmaps, etc.
  * Removed RSRM support. 

Shaders: 
- Added Car Paint shader.
- Added Prototyping shader.
- Added Hair shader.
- Added Eye shader.
- Added Eye Occlusion shader.
- Added Glass shader. 
  * Replaces Transparent Distort 
- Added Unlit shader. 
  * Replaces the old Glow shaders.
- Added Weighted Blend shaders.
- Added Oriented Blend shaders.
- Added Terrain shaders.
- Added Transmission shaders.
- Added Particle shaders.
- Added Tessellation variants of all shaders.
- Changed Skin shaders 
  * Added attenuation to the transmission effect.
  * Transmission is now in Base alpha.
  * Specularity is now in the Material Map blue channel. 
  * Transmission "weight" parameter is now converted to linear internally.

Shader Features:
- Added Ubershaders!
  * Users can now add/remove features within a shader rather than by switching shaders.
  * Uses the new shader_feature system to compile on demand and cut down on excess keyword usage.
- Added Vertex-weighted Decal feature.
  * Can control where alpha decals appear on the mesh per-vertex.
  * Dropped detail material and normal and now rely on this variant being combined with the Detail feature.
- Added Masked Detail feature.
  * Can use a per-pixel mask to control area of influence.
- Added UV mode to AO2, Detail, Dissolve, and Effect texture controls.
- Added AO2 support to the Car Paint, Glass, and Transmission shaders.
- Merged Masked Incandescence system with Unity's new Emission feature.
  * Allows it to feed into the lightmap and dynamic GI systems.
- Changed Dissolve, Emission, and Rim effects to use Gain, rather than intensity.
  * [0,1] range with a perceptually linear gain in intensity.
  * Added a weight parameter to dissolve glow to compensate for added intensity.
- Changed primary textures to now use native Unity transforms.
  * You can now tile the other texture groups independently of the "Main Textures" group.
  * Rim and Emission color textures now have an Offset parameter.
- Changed the TeamColor feature so that the RGB masks are applied on top of the alpha mask.
  * Can now use RGB textures to save memory.
  * Testing is simpler, since you no longer need to make a texture with a zero alpha.
- Fixed the issue where tiled secondary textures (Detail, Decal, etc) would "swim" when using parallax.

Tools:
- Light Inspector
  * All lights can now support intensities higher than 8.

- Area Light Inspector
  * Extends existing Point and Spot light gameobjects to add Size information.
  
- Material Inspector
  * Added a new in-shader DSL UI definition system.
  * Added a new ubershader UI.
    ~ User enables features by adding/removing properties sections.
    ~ Uses Unity 5's render mode selector rather than separate Opaque, Transparent, etc shaders.
  * Changed the Visualize feature
    ~ Added support for visualizing on Skinned Meshes.
    ~ Added support for submesh visualization.
    ~ Added UV mode support, including on parent textures.
    ~ Changed button to now appears outside collapsed transforms section on textures.
	~ Fixed a bug where visualizing individual channels displayed with the wrong intensities.
	~ Fixed the bug where visualize button appeared on materials selected inside the project window.
  * Changed the Texture controls
    ~ Renamed "Velocity" to "Scroll".
    ~ Added a "Spin" value for spinning textures on particles.
    ~ Added UV mode to control whether a texture uses UV0 or UV1.
  * Fixed the bug where materials would throw exceptions if they had more than one property with the same name but different types.
  * Fixed the issue with Texture controls where you couldn't pick a different texture in the same open window after picking one.
  
- Material Map Packer
  * Added a new "Terrain" packed mode for supporting maps with color and roughness.
  * Modified the save path to reduce its width for extremely deep folder paths. 
  * Fixed an issue where the float value controls were previewing a color that was too dark.
  
- RSRM Generator
  * Removed since we discontinued support for them.
  
Integration:
- Skyshop
  * Removed support.

- Substance Designer
  * Added support for Alloy's new BRDF.
  * Added support for SD4.6.
    ~ Support for the new "specularlevel" input, with legacy support for our own "specularity" input.
    ~ Emission support.
    ~ Opacity support, but it blends incorrectly since it is in gamma-space.
    ~ Tessellation support.
  * Fixed some issues that caused the Specular highlights to be too dark.  
  * Fixed an issue where the the ambient occlusion's ambient intensity was being changed. 
  * Removed support for D3D-style normal toggle, since Unity doesn't support that.
  
- Substance Painter
  * Added a new Alloy preview shader. 

Demo Assets:
- Updated all the materials to use Alloy 3.0 shaders.

Known issues:
- Visualize feature does not work correctly when used with parallax or tessellation. 

Version 2.1.2
=====================
Tools
- Material Inspector
  * Changed the Visualize feature
    ~ Added support for visualizing on Skinned Meshes.
    ~ Added support for submesh visualization.
	~ Fixed a bug where visualizing individual channels displayed with the wrong intensities.
	~ Fixed the bug where visualize button appeared on materials selected inside the project window.

- Material Map Packer
  * Fixed an issue where the float value controls were previewing a color that was too dark.

Integration:
- Skyshop
  * Updated Alloy to use Skyshop 1.11.

Version 2.1.1
=====================
Integration:
- Substance Designer
  * Updated Alloy preview shader to use the new SH diffuse lighting feature.
  * Added a new shader to render using packed material map rather than individual channels.

Bug Fixes:
- Fixed the translucent & skin shaders to render correctly in deferred mode on MacOSX.
- Fixes issues when using skin shaders with Candela in deferred mode. 

Version 2.1
=====================
Shaders
- Added support for Parallax & Parallax Occlusion Mapping modes in "\Core" and "\Transparent\Cutout" shaders.
- Added a TeamColor detail mode to the standard shaders.
- Added archviz-friendly UV1AO2 shader variants.
- Dissolve 
  * Added variants to all the standard shaders so it is easier to apply the effect to common materials.
  * Changed the Cutoff parameter to use [0,1], rather than [0,1.01].
- Skin 
  * Moved to "Skin" folder.
  * Generalized to support other shader features (Decal, Detail, Rim, etc)
  * Added custom material editor support.
- Modified “Self-Illumin/Glow” and “Self-Illumin/Glow Cutout” to use the custom editor.
- Added support for Skyshop 1.07 and up.
  * Box projection is now accessed through skyshop's sky manager UI.
  * Added support for sky blending.
  * PLEASE NOTE: Alloy will no longer work with older versions of Skyshop due to changes in how they do their calculations.
- Changed the custom editor parameter names and order to improve readability.
- Fixed an issue where the misnamed Decal material map parameter prevented it from showing up in our custom editor.
- Fixed an issue where we weren’t gamma-correcting the transition glow intensity in the Transition shaders.
- Restored support for low-quality vertex lighting mode.

PackedTextures (ie. "_AlloyPM" and "_AlloyDM")
- Added support for setting the Wrap Mode on packed textures.
  * Still defaults to "Repeat".
- Added support for setting packed textures to "Automatic TrueColor" format.
  * Best to keep it on "Automatic Compressed" unless compression artifacts are harming visuals.
- Added support for setting max size on packed textures.
  * Capped to not exceed texture's dimensions.
- Fixed issue where user could accidentally set the packed textures to an invalid format.

NOTE: It is also possible to set the Aniso level, in case you didn't know.

Substance Designer
- SD4.1 shader fix so it no longer manually gamma-corrects the environment map. 

Bug Fixes
- Fixed an issue where our custom material inspector's tab and texture name text was hard to read in Light Skin mode.
- Minor cleanup in our RSRM Generator and Material Map Packer to make them more readable using Light Skin.

DEPRECATED
The following shaders and paths are to be removed after this release:
"Assets/Alloy/FX/Transparent/Cutout/*"
"Assets/Alloy/Core/Skin Bumped"

Version 2.0.4
=====================
- EMERGENCY hotfix because I'm an idiot.

Version 2.0.3
=====================
- Added beta Skin shader in Core set (Skin Bumped).

Version 2.0.2
=====================
- Fixed inspector bug preventing custom cubes to be input.

Version 2.0 
=====================
Shading Improvements
- Increased Specular Power Range
- Better Visibility Function - Treyarch Shlick Approximation
- Specular Occlusion (Tri-ace style)
- Specular Anti-Aliasing via Roughness Correction

Updated Shader Features
- Smoothness changed to Roughness (to line up with SD4, and other industry conventions)
- Added Specularity Parameter for varying specular intensity on dielectrics
- New RGBA Packed Data Map (R = Metallic, G = AO, B = Spec, A = Roughness)
- Dropdown for Ambient Lighting options, rather than multiple shader variants.
- Added Exposure Boost for traditional cube reflections 
- RSRMs now affect ambient diffuse
- More controls and texture features for Masked Incandescence and Rim Lighting

New Workflow Tools
- Custom Material Inspectors
- Alloy Packed Map Generator
- Alloy RSRM Generator Editor
- Substance Designer 4 Preview Shader with sample graphs 

New Shader Variants
- Decal Texture Versions in Each Variant Set
- Distortive Translucent Variant Set
- Alpha Cutout Variant Set
- VFX Dissolve and Transition Shaders

Full Skyshop Compatibility
- Global Sky Settings, Diffuse SH, FIltered Spec Cube
- Custom Overridden FIltered Spec Cube
- HDR Filtered Cube-capture using Alloy Materials
- Box Projection Support

Known Issues
- Some faceting can occur on super smooth surfaces in deferred mode due to normal buffer precision (only Unity can fix)
- Translucent shaders only receive 1 dynamic light in deferred mode due to a Unity 4.3 glitch (we have an open bug report)
- Deferred mode is totally busted on OSX. We have no idea wtf is happening, but we're trying to figure out what it is.
- We don't have a terrain shader currently. Don't worry, we're working hard on it, but didn't want to delay this update further.


Alloy 1.01 Change Log
=====================
- Standardized the API naming conventions to avoid name collisions when mixing shader libraries. This will break current user-created shaders, which will need to be updated to use the new API.
  * RimLight() -> AlloyRimLight()
  * EPSILON -> ALLOY_EPSILON
  * DeGamma() -> AlloyDeGamma()
  * LinearLuminance() -> AlloyLinearLuminance()
  * etc.

- Added a new material API to move implementation details of our material system out of the individual shaders. 
  * Direct access to the SurfaceOutput will no longer work correctly.
  * For custom shaders, we strongly recommend using the new API.

- The headers are no longer obfuscated, and come fully commented.

- Renamed “Alloy/Transparent/MaskedIncandescence Rim” to “Alloy/Effects/MaskedIncandescence Rim” since it doesn’t integrate with Unity’s translucency system for baking.

- Fixed an issue in “Alloy/Effects/MaskedIncandescence Rim” where it wasn’t getting texture coordinates from the mask texture

- Reoredered the parameters for all the “*MaskedIncandescence*” shaders so that the Mask is higher up to show that it uses the first UV set while the Incandescence texture uses the second UV set.

- Removed an unnecessary energy conserving step from the distort pass of the alpha distort shaders.

- Fixed an issue where alpha was darkening albedo in cutout shaders.

- Fixed an issue in the terrain shaders where the blend weights were being applied twice to the smoothness, causing them to be biased toward rough values where multiple splats overlapped.
